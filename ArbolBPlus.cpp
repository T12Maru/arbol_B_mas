#include "ArbolBPlus.hpp"

ArbolBPlus::ArbolBPlus(int orden /**< = 5 */) : numNodos(0), orden(orden),raiz(nullptr)
{
}

//***********************************************************************************************************************************

ArbolBPlus::~ArbolBPlus()
{
    if(!EstaVacio() ) Vaciar();
}

//***********************************************************************************************************************************

ArbolBPlus::ArbolBPlus(const ArbolBPlus & arbol) : raiz(nullptr)
{
    *this = arbol;
}

//***********************************************************************************************************************************

ArbolBPlus & ArbolBPlus::operator=(const ArbolBPlus &arbol)
{
}

//***********************************************************************************************************************************

void ArbolBPlus::Agregar(int dato)
{
    Agregar(dato,raiz);
}

//***********************************************************************************************************************************

void ArbolBPlus::Eliminar(int dato)
{

}

//***********************************************************************************************************************************

void ArbolBPlus::Vaciar()
{

}

//***********************************************************************************************************************************

bool ArbolBPlus::Buscar(int dato)
{
 return true;
}

//***********************************************************************************************************************************

bool ArbolBPlus::EstaVacio()
{
    return numNodos == 0;
}

//---------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------    M    Privados        ---------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------

void ArbolBPlus::Agregar(int dato,Nodo * &subRaiz)
{
    if(subRaiz == nullptr){
        subRaiz = new Nodo();
        subRaiz->datos[0] = dato;
        ++subRaiz->numDatos;
        ++numNodos;
        return;
    }
    //Si la subraiz es hoja, se agrega un elemento al arreglo, sino, se compara el dato con los datos del nodo.
    if(subRaiz->EsHoja()){
        //si hay espacio se agrega un elemento, sino entonces se divide el nodo en 2 y se sube el menor del segundo.
        if(subRaiz->HayEspacio()){
            subRaiz->datos[subRaiz->numDatos+1] = dato;
            ++subRaiz->numDatos;
        }else{
            //Agregar empujar
            //conectar hojas
            //sumar el numHijos
        }
    }else{
        for(int i = 0 ; i < subRaiz->numDatos ; ++i){
            if(dato < subRaiz->datos[i]){
                Agregar(dato,subRaiz->hijos[i]);
                return;
            }
        }
        Agregar(dato,subRaiz->hijos[subRaiz->numDatos+1]);
    }
}



//---------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------    Estructura nodo      ---------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------


ArbolBPlus::Nodo::Nodo(Nodo *hijos, int orden /**< = 5 */) : numDatos(0), numHijos(0), orden(orden), hijos(nullptr),
                                                        siguienteHoja(nullptr)
{
    datos = new int[orden-1];
}

bool ArbolBPlus::Nodo::HayEspacio()
{

}


bool ArbolBPlus::Nodo::EsHoja()
{

}




